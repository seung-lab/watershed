#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass llncs
\begin_preamble
\usepackage {url}
\usepackage [numbers]{natbib}
\renewcommand{\fnum@figure}{\bf Fig.~\thefigure .}
\usepackage{caption}
\usepackage[labelsep=space]{caption}


\renewcommand{\bibsection}{\section*{\bibname}}
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes true
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\author -190403614 "Aleksandar Zlateski" 
\end_header

\begin_body

\begin_layout Title
Image Segmentation by Size-Dependent Single Linkage Clustering of a Watershed
 Basin Graph 
\end_layout

\begin_layout Author
Aleksandar Zlateski
\begin_inset script superscript

\begin_layout Plain Layout
1
\end_layout

\end_inset

 and H.
 Sebastian Seung
\begin_inset script superscript

\begin_layout Plain Layout
2
\end_layout

\end_inset


\end_layout

\begin_layout Institute
\begin_inset script superscript

\begin_layout Plain Layout
1
\end_layout

\end_inset

 Massachusetts Institute of Technology, Cambridge, USA
\begin_inset Newline newline
\end_inset


\family typewriter
zlateski@mit.edu
\family default

\begin_inset Newline newline
\end_inset


\begin_inset script superscript

\begin_layout Plain Layout
2
\end_layout

\end_inset

 Princeton University, Princeton, USA
\begin_inset Newline newline
\end_inset


\family typewriter
sseung@princeton.edu
\end_layout

\begin_layout Abstract
We present a method
\change_inserted -190403614 1425598483
 
\change_unchanged
 for hierarchical image segmentation that defines a disaffinity graph on
 the image, over-segments it into watershed basins, defines a new graph
 on the basins, and then merges basins with a modified, size-dependent version
 of single linkage clustering.
 The method is illustrated on the challenging problem of segmenting 3D electron
 microscopic brain images.
 Our watershed transform works by finding the basins of attraction of steepest
 descent dynamics, and has runtime that is linear in the number of graph
 edges
\change_inserted -190403614 1425581719
.
\change_unchanged

\end_layout

\begin_layout Abstract
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Abstract

\series bold
Keywords: 
\series default
Watershed, image segmentation, graphs, hierarchical clustering, electron
 microscopy
\end_layout

\begin_layout Section

\series bold
Introduction
\end_layout

\begin_layout Standard
.

\change_deleted -190403614 1425581721
 
\change_unchanged
It yields basins similar to those of watershed cuts, except that plateaus
 are divided between basins consistently and in a more even way.
 In general, watershed algorithms tend to produce severe over-segmentation,
 which can be counteracted by pre- and/or post-processing.
\end_layout

\begin_layout Standard
Our post-processing starts by examining the new graph on the basins, in
 which the edge connecting two basins is assigned the same weight as the
 minimal edge connecting the basins in the original disaffinity graph.
 Then single linkage clustering yields a hierarchical segmentation of the
 original image in which the lowest level consists of the watershed basins.
 The levels of single linkage clustering yield flat segmentations in which
 some of the basins are merged.
\end_layout

\begin_layout Standard
If we only expect to use levels above some minimum value T_min, then it
 turns out to be equivalent and more efficient to preprocess the original
 disaffinity graph before watershed by setting all edge weights below T_min
 to a common low value.
 In another pre-processing step we remove the edges with disaffinity to
 allow for unsegmented regions.
\end_layout

\begin_layout Standard
We also show how to modify single linkage clustering by making it depend
 not only on edge weights but also on cluster size - volume, length, etc.
 The modification is useful when there is prior knowledge about the size
 of true segments, and is shown to have an efficient implementation because
 size is a property that is guaranteed to increase with each agglomerative
 step.
\end_layout

\begin_layout Subsubsection
Related work.
\end_layout

\begin_layout Standard
Similar agglomerative clustering is 
\begin_inset CommandInset citation
LatexCommand cite
key "Felzenszwalb2004"

\end_inset

 and 
\begin_inset CommandInset citation
LatexCommand cite
key "Guimaraes2012"

\end_inset

 introduce similar agglomerative clustering method based on an arbitrary
 predicate of the clusters.
 He starts from the set of vertices as individual clusters and produces
 final segmentation in near linear time for integral and 
\begin_inset Formula $O(\left|E\right|\log\left|E\right|)$
\end_inset

 for real valued weights of the edges.
 
\end_layout

\begin_layout Section
Watershed Transform
\end_layout

\begin_layout Standard
Inspired by the 
\emph on
drop of water principle 
\emph default

\begin_inset CommandInset citation
LatexCommand cite
key "Cousty2009"

\end_inset

 we define a steepest descent discrete dynamics on a connected edge-weighted
 graph 
\begin_inset Formula $G=(V,E)$
\end_inset

 with non-negative weights.
 A water drop travels from a vertex to a vertex using only 
\emph on
locally minimal
\emph default
 edges.
 An edge 
\begin_inset Formula $\{u,v\}$
\end_inset

 is 
\emph on
locally minimal
\emph default
 with respect to 
\begin_inset Formula $u$
\end_inset

 if there is no edge in 
\begin_inset Formula $E$
\end_inset

 containing 
\begin_inset Formula $u$
\end_inset

 with lower weight.
 Starting from a vertex 
\begin_inset Formula $v_{0}$
\end_inset

 the evolution of the system can be represented as a 
\emph on
steepest descent walk
\emph default
 
\begin_inset Formula $\left\langle v_{0},e_{0},v_{1},e_{1},v_{2},\dots\right\rangle $
\end_inset

 where every edge 
\begin_inset Formula $e_{i}$
\end_inset

 is locally minimal in respect to 
\begin_inset Formula $v_{i}.$
\end_inset

 A 
\emph on
regional minimum 
\begin_inset Formula $M$
\end_inset


\emph default
 is a connected subgraph of 
\begin_inset Formula $G$
\end_inset

 such that every 
\emph on
steepest descent walk 
\emph default
in 
\begin_inset Formula $G$
\end_inset

 starting from a vertex in 
\begin_inset Formula $M$
\end_inset

 will stay within 
\begin_inset Formula $M$
\end_inset

.
 A vertex 
\begin_inset Formula $v$
\end_inset

 belongs to the 
\emph on
basin of attraction
\emph default
 of a 
\emph on
regional minimum 
\begin_inset Formula $M$
\end_inset

 
\emph default
if there exist a 
\emph on
steepest descent walk 
\emph default
from 
\begin_inset Formula $v$
\end_inset

 to any vertex in 
\begin_inset Formula $M$
\end_inset

.
 Note that 
\begin_inset Formula $v$
\end_inset

 can belong 
\emph on
basins of attractions
\emph default
 of multiple 
\emph on
regional minima
\emph default
.
 In our 
\emph on
watershed transform
\emph default
 we partition 
\begin_inset Formula $V$
\end_inset

 into 
\emph on
basins of attraction
\emph default
 of 
\emph on
the regional minima.
 
\emph default
Vertices belonging to more than one 
\emph on
basin of attraction 
\emph default
will be referred to as 
\emph on
border vertices
\emph default
 and will be assigned to one of the 
\emph on
basins
\emph default
 as described below.
\end_layout

\begin_layout Standard

\series bold
Steepest descent graph.
 
\series default
The central quantity in the watershed algorithm is the steepest descent
 graph, defined as follows.
 Consider an undirected weighted graph 
\begin_inset Formula $G$
\end_inset

 (Fig.
 1(a)).
 Define the directed graph 
\begin_inset Formula $G'$
\end_inset

 in which each undirected edge of 
\begin_inset Formula $G$
\end_inset

 is replaced by both directed edges between the same vertices.
 The 
\emph on
steepest descent graph
\emph default
 
\begin_inset Formula $D$
\end_inset

 (Fig.
 1(b)) is a subgraph of 
\begin_inset Formula $G'$
\end_inset

 with the property that 
\begin_inset Formula $D$
\end_inset

 includes every edge of 
\begin_inset Formula $G'$
\end_inset

 with minimal weight of all edges outgoing from the same vertex.
 A directed path in 
\begin_inset Formula $D$
\end_inset

 is a path of steepest descent in 
\begin_inset Formula $G$
\end_inset

, in the sense that every step is along an edge with locally minimal weight.
 The steepest ascent graph can be defined analogously using edges of maximal
 weight.
 Either steepest ascent or descent can be used without loss of generality.
 For simplicity, for a given vertex 
\begin_inset Formula $v$
\end_inset

 we will refer to its edges in 
\begin_inset Formula $D$
\end_inset

 as incoming, outgoing, and bidirectional.
 A 
\emph on
plateau
\emph default
 is a connected component of the subgraph of 
\begin_inset Formula $D$
\end_inset

 containing only bidirectional edges.
 A 
\emph on
plateau corner
\emph default
 is a vertex of a 
\emph on
plateau
\emph default
 that has at least one outgoing edge.
 
\emph on
Locally minimal plateaus
\emph default
 contain no 
\emph on
plateau corner, 
\emph default
they
\emph on
 
\emph default
are equivalent to the regional minima of the original graph.
 
\emph on
Non-minimal plateaus 
\emph default
contain one or more 
\emph on
plateau edges.
 
\emph default
A 
\emph on
saddle vertex 
\emph default
has more than one outgoing edge.
 In Fig.
 1(c) we show 
\emph on
locally minimal plateaus 
\emph default
(black), 
\emph on
non-minimal plateau 
\emph default
(gray), 
\emph on
plateau corners
\emph default
 (C), and a
\emph on
 saddle vertex 
\emph default
(S).
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename Figures/affinity_graph.eps
	scale 50

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename Figures/sd_graph.eps
	scale 50

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename Figures/sd_graph_plateaus.eps
	scale 50

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename Figures/ws_result.eps
	scale 50

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
(a) An affinity graph; (b) derived steepest descent graph; (c) locally minimal
 plateaus (black), non-minimal plateau (gray), saddle vertex (S), plateau
 corners (C); (d) the two basins of attractions and border vertices (gray)
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard

\series bold
Assigning border vertices.
 
\series default
In Fig.
 1(d) we show the 
\emph on
basins of attraction
\emph default
 of the two 
\emph on
regional minima.

\emph default
 The 
\emph on
border
\emph default
 vertices are shown in gray and belong to both 
\emph on
basins of attraction.
 
\emph default
Watershed cuts 
\begin_inset CommandInset citation
LatexCommand cite
key "Cousty2009,Cousty2010"

\end_inset

 assign 
\emph on
border
\emph default
 vertices with a single constraint that all the 
\emph on
basins of attraction
\emph default
 have to be connected.
 We introduce additional constrains.
 The watershed transform to be uniquely defined and the 
\emph on
non-minimal plateaus 
\emph default
should be divided evenly
\emph on
.
 
\emph default
More specifically, we want our dynamics
\emph on
 
\emph default
to be uniquely defined at 
\emph on
saddle vertices.
 
\emph default
Also, we want the vertices of the 
\emph on
non-minimal plateaus
\emph default
 to be assigned to the same 
\emph on
basin of attraction
\emph default
 as the nearest 
\emph on
plateau corner - 
\emph default
a 
\emph on
plateau corner
\emph default
 reachable in fewest steps following the rules of our dynamics
\emph on
.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename Figures/sd_graph_ordered.eps
	scale 50

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename Figures/sd_graph_plateaus_ordered.eps
	scale 50

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename Figures/sd_graph_plateaus_modified.eps
	scale 50

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename Figures/final_segmentation.eps
	scale 50

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
(a) Vertex indices; (b) distances to the nearest plateau corner; (c) modificatio
ns to the steepest descent graph; (d) final watershed partition of the graph
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard

\series bold
Watershed transform algorithm.
 
\series default
We introduce an ordering function 
\begin_inset Formula $\alpha:V\to\{1,2,...,|V|\}$
\end_inset

 such that 
\begin_inset Formula $\alpha(u)\neq\alpha(v)$
\end_inset

 if and only if 
\begin_inset Formula $u\neq v$
\end_inset

.
 We'll refer to 
\begin_inset Formula $\alpha(u)$
\end_inset

 as the index of 
\begin_inset Formula $u$
\end_inset

 (Fig.
 2(a)).
 In the first part of the algorithm we modify 
\begin_inset Formula $D$
\end_inset

 by removing edges.
 For all 
\emph on
saddle vertices
\emph default
 we keep only one outgoing edge - the one pointing to a vertex with the
 lowest index.
 We then divide the 
\emph on
non-minimal plateaus
\emph default
.
 We initialize a global FIFO queue 
\begin_inset Formula $Q$
\end_inset

.
 We then mark all the 
\emph on
plateau corner
\emph default
 vertices as visited and insert them into 
\begin_inset Formula $Q$
\end_inset

 in increasing order of their index.
 While 
\begin_inset Formula $Q$
\end_inset

 is not empty we remove the vertex 
\begin_inset Formula $v$
\end_inset

 from the top of the queue, we then follow all the bidirectional edges.
 If the vertex 
\begin_inset Formula $u$
\end_inset

 on the other side of the edge is not visited, we mark it as such, insert
 it to the back of the queue and change the edge to be incoming.
 Otherwise, if the vertex was already visited we just remove the edge.
 The resulting steepest descent graph is shown on Fig.
 2(c) - the dotted edges are removed.
 The connected components of the modified 
\emph on
descent graph 
\begin_inset Formula $D$
\end_inset


\emph default
, now considering all the remaining edges as bidirectional will be our watershed
 domains.
\end_layout

\begin_layout Standard
The algorithm runs in linear time with respect to the number of edges in
 
\begin_inset Formula $G$
\end_inset

 and produces an optimal partitioning as defined in 
\begin_inset CommandInset citation
LatexCommand cite
key "Cousty2009"

\end_inset

.
 The total number of segments in the partitioning will equal to the total
 number of 
\emph on
regional minima.
 
\emph default
We defer the detailed algorithm listing, the proof of correctness and running
 time to the supplementary material.
\end_layout

\begin_layout Standard

\series bold
Reducing over-segmentation
\series default
.
 Often the edge weights of 
\begin_inset Formula $G$
\end_inset

 represent 
\emph on
disaffinities
\emph default
 - confidence that the two vertices don't belong to the same segment.
 The 
\emph on
disaffinity 
\emph default
between two vertices not connected by an edge is considered to be infinite.
 The 
\emph on
saliency 
\emph default
of two adjacent segments is the value of the minimal 
\emph on
disaffinity
\emph default
 between the vertices of the two segments.
 Noisy values of 
\emph on
disaffinities 
\emph default
can produce severe over-segmentation (Fig.
 3(c)).
 In order to reduce the over-segmentation we often merge adjacent segments
 with the 
\emph on
saliency 
\emph default
below some given threshold 
\begin_inset Formula $T_{\min}$
\end_inset

 
\begin_inset CommandInset citation
LatexCommand cite
key "Najman1996"

\end_inset

.
 We are confident 
\emph on
disaffinities 
\emph default
below 
\begin_inset Formula $T_{\min}$
\end_inset

 should yield connected vertices.
 An equivalent segmentation can be obtained by replacing all edges in 
\begin_inset Formula $G$
\end_inset

 with the weight smaller than 
\begin_inset Formula $T_{\min}$
\end_inset

 to a common low value (e.g.
 
\begin_inset Formula $0$
\end_inset

) before applying the watershed transform.
 
\change_deleted -190403614 1425523470
We differ the proof 
\change_inserted -190403614 1425523473
We prove this claim in the
\change_deleted -190403614 1425523475
to the 
\change_inserted -190403614 1425523476
 
\change_unchanged
supplementary material.
 To show confidence about high values of 
\emph on
disaffinities
\emph default
, and in order to prevent undesired mergers, we introduce a threshold 
\begin_inset Formula $T_{\max}$
\end_inset

 by erasing all the edges from 
\begin_inset Formula $G$
\end_inset

 with the weight higher than 
\begin_inset Formula $T_{\max}$
\end_inset

, and essentially setting them to 
\begin_inset Formula $\infty$
\end_inset

.
 The 
\begin_inset Formula $T_{\max}$
\end_inset

 threshold can produce singleton vertices in 
\begin_inset Formula $G$
\end_inset

.
 The singleton vertices are not assigned to any 
\emph on
basin of attraction
\emph default
 and are considered background, which is often 
\change_inserted -190403614 1425523499
a 
\change_unchanged
desired
\change_inserted -190403614 1425523513
 result
\change_unchanged
.
\end_layout

\begin_layout Section
Hierarchical Clustering of the Watershed Basin Graph
\end_layout

\begin_layout Standard
A hierarchical clustering of an undirected weighted graph treats each vertex
 as a singleton cluster and successively merges clusters connected by an
 edge in the graph.
 A cluster is always a connected subset of the graph's vertices.
 Each merge operations creates a new level of the hierarchy - a flat segmentatio
n where each cluster represents a segment.
 In 
\emph on
single linkage
\emph default
 clustering, each step we merges two clusters connected by an edge with
 the lowest weight in the original graph.
 
\emph on
Single linkage 
\emph default
clustering is equivalent to finding the minimum spanning tree of the graph
 
\begin_inset CommandInset citation
LatexCommand cite
key "Gower1969"

\end_inset

.
\end_layout

\begin_layout Standard
In this section we propose a size-dependent single linkage clustering.
 The method can be applied to any edge weighted graph, however we find it
 superior when used on the 
\emph on
watershed basin graph
\emph default
 defined as follows.
 Let 
\begin_inset Formula $V_{W}=\{B_{1},B_{2},\dots\}$
\end_inset

 be the set of 
\emph on
watershed basins
\emph default
 obtained by the watershed transform of a graph 
\begin_inset Formula $G=(V,E)$
\end_inset

.
 We define the watershed basin graph of 
\begin_inset Formula $G$
\end_inset

 as 
\begin_inset Formula $G_{W}=(V_{W},E_{W})$
\end_inset

 where an edge 
\begin_inset Formula $\{B_{i},B_{j}\}$
\end_inset

 exists in 
\begin_inset Formula $E_{W}$
\end_inset

 for all neighboring basins 
\begin_inset Formula $B_{i}$
\end_inset

 and 
\begin_inset Formula $B_{j}$
\end_inset

, and has a weight 
\begin_inset Formula $w(\{B_{i},B_{j}\})$
\end_inset

 equal to the 
\emph on
saliency
\emph default
 of the two 
\emph on
basins.

\emph default
 We will refer to the vertices of the watershed domain graph as 
\emph on
basins
\emph default
 and to the edge weights as 
\emph on
saliencies.
\end_layout

\begin_layout Standard
In our size-dependent 
\emph on
single linkage
\emph default
 clustering method, in each step we merge clusters with the lowest 
\emph on
saliency
\emph default
 that don't satisfy a given predicate.
 
\emph on
Saliency 
\emph default
of two clusters is defined as the minimal 
\emph on
saliency 
\emph default
of any two members:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
d_{C_{1},C_{2}}=\underset{B_{i}\in C_{1},B_{j}\in C_{2},\{B_{i},B_{j}\}\in E_{W}}{\min}w(\{B_{i},B_{j}\})
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
At the last level of the hierarchy all pairs of clusters will satisfy the
 predicate.
\end_layout

\begin_layout Standard

\series bold
Size-dependent comparison predicate.
 
\series default
We define a predicate 
\begin_inset Formula $\Lambda,$
\end_inset

 for evaluating whether two clusters should be merged.
 The predicate is based on the sizes of the two clusters.
 Let 
\begin_inset Formula $S(C)$
\end_inset

 represent the size of 
\begin_inset Formula $C$
\end_inset

 (e.g.
 number of 
\emph on
basins
\emph default
 in the cluster or the sum of the 
\emph on
basin 
\emph default
sizes).
 The size can be any measure of a cluster with the property that 
\begin_inset Formula $S(C_{1}\cup C_{2})\ge S(C_{1})$
\end_inset

.
 We first define a non-increasing threshold function of cluster size 
\begin_inset Formula $\tau(s)$
\end_inset

.
 For a given cluster size 
\begin_inset Formula $s$
\end_inset

 the value 
\begin_inset Formula $\tau(s)$
\end_inset

 represents the maximal 
\emph on
saliency
\emph default
 allowed between a cluster of size 
\begin_inset Formula $s$
\end_inset

 and any adjacent cluster.
 Our predicate is then defined as:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\Lambda(C_{1},C_{2})=\begin{cases}
\textrm{t\textrm{rue}} & \textrm{if }d_{C_{1},C_{2}}\ge\tau\left(\min\left\{ S(C_{1}),S(C_{2})\right\} \right)\\
\textrm{false} & \textrm{otherwise\textrm{ }}
\end{cases}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
The intuition behind the predicate is to apply prior knowledge about the
 sizes of the true segments.
 With the threshold function we control the confidence required to grow
 a cluster of a certain size.
\end_layout

\begin_layout Standard
With a slight modification of the predicate we could allow for an arbitrary
 threshold function (changing the condition to 
\begin_inset Formula $d_{C_{1},C_{2}}\ge\min\left\{ \tau(S(C_{1})),\tau(S(C_{2}))\right\} )$
\end_inset

.
 However, restricting the function to be non-decreasing allows us to design
 a more efficient
\emph on
 
\emph default
algorithm.
 It is also more intuitive to allow higher 
\emph on
saliency
\emph default
 for merging small clusters and require lower 
\emph on
saliency
\emph default
 as the size
\change_inserted -190403614 1425591567
s
\change_unchanged
 of the clusters grow.

\change_inserted -190403614 1425592450
 As 
\begin_inset Formula $\tau$
\end_inset

 is required to be non-decreasing, we can rewrite the condition in (1) as
 
\begin_inset Formula $\tau^{-1}(d_{C_{1},C_{2}})\ge\min\left\{ S(C_{1}),S(C_{2})\right\} $
\end_inset

 allowing us to specify either 
\begin_inset Formula $\tau$
\end_inset

 or 
\begin_inset Formula $\tau^{-1}.$
\end_inset


\change_unchanged

\end_layout

\begin_layout Standard

\series bold
Algorithm 1
\change_deleted -190403614 1425520430
 
\change_unchanged
 
\series default
In our clustering algorithm we visit all the edges of the watershed basin
 graph in non-decreasing order and merge the corresponding clusters based
 on the introduced predicate.
\end_layout

\begin_layout Enumerate
Sort 
\begin_inset Formula $E_{W}$
\end_inset

 into 
\begin_inset Formula $\pi(e_{1},\dots,e_{n})$
\end_inset

, by non-decreasing edge weight.
\end_layout

\begin_layout Enumerate
Start with basins as singleton clusters 
\begin_inset Formula $S^{0}=\{C_{1}=\{B_{1}\},C_{2}=\{B_{2}\},\dots\}$
\end_inset


\end_layout

\begin_layout Enumerate
Repeat step 
\begin_inset Formula $4$
\end_inset

 for 
\begin_inset Formula $k=1,\dots,n$
\end_inset


\end_layout

\begin_layout Enumerate
Construct 
\begin_inset Formula $S^{k}$
\end_inset

 from 
\begin_inset Formula $S^{k-1}$
\end_inset

.
 Let 
\begin_inset Formula $e_{k}=\{B_{i},B_{j}\}$
\end_inset

 be the 
\begin_inset Formula $k$
\end_inset

-th edge in the ordering.
 Let 
\begin_inset Formula $C_{i}^{k-1}$
\end_inset

 and 
\begin_inset Formula $C_{j}^{k-1}$
\end_inset

 be components of 
\begin_inset Formula $S^{k-1}$
\end_inset

 containing 
\begin_inset Formula $B_{i}$
\end_inset

 and 
\begin_inset Formula $B_{j}$
\end_inset

.
 If 
\begin_inset Formula $C_{i}^{k-1}\neq C_{j}^{k-1}$
\end_inset

 and 
\begin_inset Formula $\Lambda(C_{i}^{k-1},C_{j}^{k-1})$
\end_inset

 then 
\begin_inset Formula $S^{k}$
\end_inset

 is created from 
\begin_inset Formula $S^{k-1}$
\end_inset

 by merging 
\begin_inset Formula $C_{i}^{k-1}$
\end_inset

 and 
\begin_inset Formula $C_{j}^{k-1}$
\end_inset

, otherwise 
\begin_inset Formula $S^{k}=S^{k-1}.$
\end_inset


\end_layout

\begin_layout Enumerate
Return the hierarchical segmentation 
\begin_inset Formula $(S^{0},\dots,S^{n})$
\end_inset


\end_layout

\begin_layout Theorem*

\series bold
Theorem 1 
\series default
\emph on
The highest level of the hierarchical segmentation produced by algorithm
 (1) will have the predicate 
\begin_inset Formula $\Lambda$
\end_inset

 satisfied for all pairs of the clusters.
 The complexity of the algorithm is 
\begin_inset Formula $\left|E_{W}\right|\log\left|E_{W}\right|$
\end_inset

.
 The algorithm can be modified to consider only the edges of the minimum
 cost spanning tree of 
\begin_inset Formula $G_{W}$
\end_inset

.
\end_layout

\begin_layout Standard
We defer the proof the supplementary material.
\end_layout

\begin_layout Standard
The steps 2-5 of the algorithm have near linear complexity.
 Once we have a sorted list of the edges we can re-run the algorithm for
 different threshold functions more efficiently.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename Figures/chan.png
	width 3cm

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:1a"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename Figures/aff.png
	width 3cm

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename Figures/raw.png
	width 3cm

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename Figures/minmax.png
	width 3cm

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename Figures/gt.png
	width 3cm

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename Figures/all.png
	width 3cm

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename Figures/fe2.png
	width 3cm

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename Figures/3d.png
	width 3cm

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
(a) EM image; (b) volumetric disaffinity graph, the 3 directions of disaffinitie
s are represented with RGB; (c) watershed transform output; (d) watershed
 transform output with 
\begin_inset Formula $T_{\min}=0.01$
\end_inset

 and 
\begin_inset Formula $T_{\max}=0.9$
\end_inset

; (e) ground truth; (f) our method; (g), (e) segmentation by 
\emph on

\begin_inset CommandInset citation
LatexCommand cite
key "Felzenszwalb2004"

\end_inset

 
\emph default
with 
\begin_inset Formula $k=0.5$
\end_inset

 and 
\begin_inset Formula $k=10$
\end_inset

 respectivelly.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout --Separator--

\end_layout

\begin_layout Section
Results
\end_layout

\begin_layout Standard
We present results on 3D electron microscopic brain images (Fig.
 3(a)).
 We obtain affinity graphs by the methods explained in 
\begin_inset CommandInset citation
LatexCommand cite
key "Turaga2009"

\end_inset

 and 
\begin_inset CommandInset citation
LatexCommand cite
key "Turaga2010"

\end_inset

 (Fig.
 3(b)).
\end_layout

\begin_layout Subsubsection
Metric
\end_layout

\begin_layout Standard
A good metric for evaluating a segmentation should ideally tell us how good
 the segmentation is for using in practice.
 Mainly how much manual corrections are needed to acheve the correct segmentatio
n.
 Often foreground-restricted Rand Index 
\begin_inset CommandInset citation
LatexCommand cite
key "Rand2009"

\end_inset

 between the proposed segmentation and the ground truth is used.
 However it has problems when the number of segments is large as the dynamics
 range gets smaller.
 A better method is proposed by Arganda et al in preparation that better
 estimastes the amount of user reaction needed to correct the segmentation.
\end_layout

\begin_layout Section
Conclusions
\end_layout

\begin_layout Standard
We can produce great over-segmentation.
 Final segmentation can be obtained by merging our segments.
 It would be a good input to a lot of other methods like 
\begin_inset CommandInset citation
LatexCommand cite
key "Mustafa"

\end_inset

prior knowledge about segments assumes all have the same size properties
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
renewcommand
\backslash
bibname{References}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset bibtex
LatexCommand bibtex
bibfiles "References/Some"
options "splncsnat"

\end_inset


\end_layout

\end_body
\end_document
